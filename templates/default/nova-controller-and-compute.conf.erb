[DEFAULT]
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
libvirt_use_virtio_for_bridges=True
verbose=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
enabled_apis=ec2,osapi_compute,metadata
rpc_backend = rabbit
auth_strategy = keystone
my_ip = <%= node[:openstack_model_t][:management_network_ip] %>
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver

vnc_enabled = True
vncserver_listen = <%= node[:openstack_model_t][:management_network_ip] %>
vncserver_proxyclient_address = <%= node[:openstack_model_t][:management_network_ip] %>

novncproxy_base_url = http://<%= node[:openstack_model_t][:management_network_ip] %>:6080/vnc_auto.html

[glance]
host = <%= node[:openstack_model_t][:management_network_ip] %>

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[database]
connection = mysql://nova:<%= node[:openstack_model_t][:NOVA_DBPASS] %>@<%= node[:openstack_model_t][:management_network_ip] %>/nova

[oslo_messaging_rabbit]

rabbit_host = <%= node[:openstack_model_t][:management_network_ip] %>
rabbit_userid = openstack
rabbit_password = <%= node[:openstack_model_t][:RABBIT_PASS] %>

[keystone_authtoken]

auth_uri = http://<%= node[:openstack_model_t][:management_network_ip] %>:5000
auth_url = http://<%= node[:openstack_model_t][:management_network_ip] %>:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = nova
password = <%= node[:openstack_model_t][:NOVA_PASS] %>

[neutron]

url = http://http://<%= node[:openstack_model_t][:management_network_ip] %>:9696
auth_strategy = keystone
admin_auth_url = http://http://<%= node[:openstack_model_t][:management_network_ip] %>/v2.0
admin_tenant_name = service
admin_username = neutron
admin_password = <%= node[:openstack_model_t][:NEUTRON_PASS] %>

service_metadata_proxy = True
metadata_proxy_shared_secret =  <%= node[:openstack_model_t][:METADATA_SECRET] %>
